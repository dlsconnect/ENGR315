ENGR315 : Introduction to MATLAB
8/27/24

MATLAB: MATrix LABoratory
	high level programming language for datat analysis & scientific applications:
		- a calculator
		- displaying and analysis of matrices and arrays

Using MATLAB as a calculator:
	>> (6+3^2)*(exp(2)-2/(exp(3)+1))

Variable assignemt:
	>> x=3	(displays)
	>> y=2; (no display)

Commands
	who - prints list of varables used
	whos - prints list of varables and details
	clear - clears varables
		MAT ex. clear x (clears varable x)
		MAT ex. clear all (clears all varables)
	format - changes the output display to the format specified by the style
		MAT ex. format long
		MAT ex. format hex
		MAT ex. format double
	Comments
		MAT ex. >> z = 2 + 3*j; % Rectangular representation


Imaginary numbers
	pi for pie mhhhmm yummy 
	i and j are complex/imaginary numbers

MATLAB Example: find the input impedance Z

Solution:	>> % Assinments of Z1, Z2, Z3
		>> Z1=1+j; Z2=1-j; Z3=1;
		>> Z = Z1+ (Z2*Z3)/(Z2+Z3)

		Z =

	   		1.6000 + 0.8000i

Vectors & Matrices

	x = [x1 x2 .... xn]	row vector (1xN)
	MAT ex. >> x = [ 1 -2 50]

	y = [y1] column vector
	    [..]
	    [ym] Mx1 
	MAT ex. >> y = [1;-1;3]
	    >> z = [2 3 6].'[ % non-conjugate transpose .' & conjugate transpose '

Sequence in MATLAB
	x = 1,2,3,4
	MAT ex. x=1:4
	MAT ex. x=1:0.5:4 % increments by 0.5

Multiplicate
	1) row vector x column vector = scalar
		(1xN) X (Nx1) should be the same
		
		x * y = [1 -1 2] * [2 1 -2]' = 1(2) + 1(-1) + 2(-2) = -3
		 	     1x3 * 3x1 

		y * x = [2(1) 2(-1) 2(2)]			[2 -2 4]
			[1(1) 1(-1) 1(2)] 		= 	[1 -1 2]
			[-2(1) -2(-1) -2(2)] 3x3 Matrix		[-2 2 -4]

		M(mxn) * N(nxp) = P(mxp)
		- element by element multiplication(M(mxn) .* N(mxn))
	
	MATLAB Example: For 0<= t <= 10, define the following function in MATLAB
		 y = 2t*e^-t*cos(2pi*t)

	solution:	>> t = 0:0.01:10;
			>> y = 2*t.*exp(-t).*cos(2*pi*t);

Basic Signals
	1) unit step function = heaviside(t)
		u(t) = {1 t>=0}
		       {0 t<0}	
	2) inpulse function (retangular pulse)
		delta t = {1/E |t| < 1/2E} for E>0 & constant (E = Epsilon)
			  {0 otherwise}
	small delta (t) = limit delta(t) E->0  unit inpulse
	
Representation of piecewise continous function using unit Steps:

	Example 1: represent the following rectangular pulse with unit steps:

		A*u(t-T1) - A*u(t-T2)
		f(t) = A[u(t-T1)-u(t-T2)]

	Example 2: g(t) = 2*cos(t)[u(t+pi/2)-u(t-pi/2)] 

9/3/2024
unit step u(t) is used to exprese pricewise continuous functions.

1) x(t) = A(u(t-T1) - u(t-T2))
2) x(t) = 2cos(t)(u(t+pi/2)-u(t-pi/2))

Ploting in MATLAB
commands
	- plot and stem

Example: Plot x(t) = 2cos(2pi*t) for 0 <= t <= 3 using MATLAB
	>> t = 0:3;
	>> y = 2*cos(2*pi*t);
	>> plot(t/y)

User Defined Functions in MATLAB
			name.m
	function name ( parameters passed to the function) 
		.
		.
		.
		.
	return

Example: Write a function that accepts two number x and y and provides a linear combination with scaling factors a and b
	ax+by

	function script (linearCombination.m)
	function linarCombination(x,y,a,b)
		
	z = a*x + b*y
	return

Example: write a function in MATLAB that when called provides the slope (m) and y intersection (b) of a line passing through points A(x1,y1) and B(x2,y2).
	y = mt +b
	Call your function lineEquation
	information to be passed to the unction: x1, y1, x2, y2;
	slope m = (y2 - y1)/(x2 - x1) 
	y-Intercept b = y1 - mx1 

Example: write a function to plot the line between points A(x1,y1) and B(x2,y2) for t1 <= t <= t2. call it plotline
Example: wrtie a funtion to find the coefficient a,b,and c of a quadratic fucntion y = at^2+bt+c passing through points A(x1,y1), B(x2,y2), and c(x3,y3) call it 
	QuadCoeff(x1,y1,x2,y2,x3,y3).

y1 = ax1^2 + bx1 + c	[x1^2 x1 1]   [a]   [y1]
y2 = ax2^2 + bx2 + c	[x2^2 x2 1] * [b] = [y2]
y3 = ax3^2 _ bx3 + c	[x3^2 x3 1]   [c]   [y3]
			     A         x     B

AX = B 	=>  X=A^-1B